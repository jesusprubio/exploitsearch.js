/*
  Copyright Jesus Perez <jesusprubio gmail com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

'use strict';

const request = require('request-promise-native');
const faker = require('faker');

const baseUrl = 'http://www.exploitsearch.net/json.php?q=';


function prom(query, opts = {}) {
  if (!query) { return Promise.reject(new Error('Required parameter: "query"')); }

  let uri = baseUrl + query;
  const cfg = {
    method: 'GET',
    // To avoid blocking.
    headers: { 'User-Agent': faker.internet.userAgent() },
    json: true,
    timeout: opts.timeout || 5000,
  };

  if (opts.exploits) { uri += '&e=1'; } // default: false
  cfg.uri = uri;

  return request.get(cfg);
}


module.exports = (query, opts = {}, callback) => {
  // Compatible with callbacks and promises.
  if (callback) {
    return prom(query, opts)
    .then(res => callback(null, res))
    .catch(err => callback(err));
  }

  return prom(query, opts);
};
