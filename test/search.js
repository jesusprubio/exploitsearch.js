/*
  Copyright Jesus Perez <jesusprubio gmail com>

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

'use strict';

const test = require('tap').test;
const lodash = require('lodash');

const ExploitSearch = require('../');


console.log('\n-> "search"');

test('Should return empty array for an inexistent service.', (assert) => {
  const client = new ExploitSearch({});

  assert.plan(1);

  client.search('nonExistentService', (err, res) => {
    if (err) {
      assert.error(err);

      return;
    }

    assert.equal(res.length, 0);
  });
});


const apiLimit = 100;
test(
  'Should return the API ' + apiLimit + ' (limit) for a deeply used service.',
  (assert) => {
    const client = new ExploitSearch({});

    assert.plan(2);

    client.search('apache', (err, res) => {
      if (err) {
        assert.error(err);

        return;
      }

      assert.equal(res.length, 100);
      assert.comment('Should have the correct structure (each result).');
      // We check only one to KISS.
      assert.deepEqual(Object.keys(res[0]), [
        'name', 'src', 'id', 'info', 'exploits',
        'refs', 'tools', 'links', 'dates',
      ]);
    });
  }
);


test('should only return exploits if desired', (assert) => {
  const client = new ExploitSearch({
    exploits: true,
  });

  assert.plan(1);

  client.search('apache', (err, res) => {
    if (err) {
      assert.error(err);

      return;
    }

    const checkValue = lodash.some(res, (entry) => {
      return entry.exploits.length === 0;
    });

    assert.equal(checkValue, false);
  });
});
